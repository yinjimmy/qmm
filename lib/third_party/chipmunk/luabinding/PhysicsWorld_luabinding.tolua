
$#include "PhysicsShape.h"
$#include "PhysicsBody.h"
$#include "PhysicsWorld.h"
$#include "PhysicsDebugNode.h"

class PhysicsWorld : public CCNode
{
    static PhysicsWorld *create(float gravityX, float gravityY);
    static PhysicsWorld *create(void);

    PhysicsDebugNode *createDebugNode(void);

    void getGravity(float *gravityX, float *gravityY);
    void setGravity(float gravityX, float gravityY);

    // add shapes to world
    PhysicsBody *addCircleShape(float mass, float radius, float offsetX = 0, float offsetY = 0);
    PhysicsBody *addBoxShape(float mass, float width, float height);
    PhysicsBody *addPolygonShape(float mass, CCPointArray *vertexes, float offsetX = 0, float offsetY = 0);
    PhysicsBody *addPolygonShape(float mass, LUA_TABLE vertexes, float offsetX = 0, float offsetY = 0);

    void bindNodeToBody(CCNode *node, PhysicsBody *body);
    void unbindNode(CCNode *node);
    void unbindAllNodes(void);

    PhysicsBody *getBodyByNode(CCNode *node);

    void start(void);
    void stop(void);
};

class PhysicsBody : public CCObject
{
    static PhysicsBody *defaultStaticBody(PhysicsWorld *world);
    static PhysicsBody *createStaticBody(PhysicsWorld *world);
    static PhysicsBody *create(PhysicsWorld *world, float mass, float moment);

    void setMass(float mass);
    void setInertia(float inertia);
    void setPosition(float x, float y);

    PhysicsShape *addSegmentShape(float lowerLeftX, float lowerLeftY, float lowerRightX, float lowerRightY, float thickness);
    PhysicsShape *addCircleShape(float radius, float offsetX = 0, float offsetY = 0);
    PhysicsShape *addBoxShape(float width, float height);
    PhysicsShape *addPolygonShape(CCPointArray *vertexs, float offsetX, float offsetY);

    void removeShapeAtIndex(int index);
    void removeAllShape(void);
};

class PhysicsShape : public CCObject
{
    float getElasticity(void);
    void setElasticity(float elasticity);
    float getFriction(void);
    void setFriction(float friction);
};

class PhysicsDebugNode : public CCNode
{
};
